name: cpp-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*'
      
permissions:
    contents: write

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: C:\tools\cygwin\bin\bash.exe --login -o igncr '{0}'
    # env:
    #   libraryName: libgpg-error
    #   installationPath: libgpg-error-installation
    #   mingwTargetZip: libgpg-error-${{ github.ref_name }}-mingw64-x86_64-posix-seh-rev0-8.1.0.zip
    steps:
      #       tagName: libgpg-error-1.47
      # - name: git clone
      #   shell: cmd
      #   run: git clone --recurse-submodules https://dev.gnupg.org/source/libgpg-error.git && cd libgpg-error && git checkout ${{ env.tagName }}
      - uses: actions/checkout@v4

      - name: Set up Cygwin
        uses: egor-tensin/setup-cygwin@v4
        with:
          packages: gcc-g++ make
          
      - shell: cmd
        run: |
          ren tree-1.8.0 tree &&^
          dir /S

      - run: |
          echo $(pwd) && \
          ls && \
          cd '${{ github.workspace }}/tree' && \
          ls && \
          g++ --version && \
          mkdir installation && \
          make && \
          make prefix="$(pwd)/installation" install

      - shell: cmd
        run: xcopy /H /Y /C "C:\tools\cygwin\bin\cygwin1.dll" "tree\installation"
        
      - shell: cmd
        run: cd tree && cd installation && dir
        
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "tree/installation"
          filename: "tree-${{ github.ref_name }}-cygwin.zip"
        
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "tree/installation/tree-${{ github.ref_name }}-cygwin.zip"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
